

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  name  String  
  email String @unique
  image String? @default("/default.svg")
  password String?
  shapes Shape[] 
  location Location[]
  role Role @default(viewer) 
  verifiedToken String? @default("")
  resetToken String? @default("")
  resetTokenExpiry DateTime?
  verifiedTokenExpiry DateTime? 
  isVerified Boolean?  @default(false)
}
enum Role{
  viewer
  editor
  admin
}
model Shape {
  id        Int      @id @default(autoincrement())
  type      ShapeType 
  userId    Int      
  user      User     @relation(fields: [userId], references: [id],onDelete: Cascade)
  rectangle Rectangle?
  polygon   Polygon?  
  circle    Circle?    
  polyline  Polyline?  
  date      DateTime @default(now())
}

enum ShapeType {
  RECTANGLE
  POLYGON
  CIRCLE
  POLYLINE
}

model Rectangle {
  id      Int   @id @default(autoincrement())
  shapeId Int   @unique 
  shape   Shape @relation(fields: [shapeId], references: [id], onDelete: Cascade) 
  bounds  Json  
}

model Polygon {
  id      Int   @id @default(autoincrement())
  shapeId Int   @unique 
  shape   Shape @relation(fields: [shapeId], references: [id], onDelete: Cascade) 
  coords  Json  
}

model Circle {
  id      Int   @id @default(autoincrement())
  shapeId Int   @unique 
  shape   Shape @relation(fields: [shapeId], references: [id], onDelete: Cascade) 
  center  Json  
  radius  Float
}

model Polyline {
  id      Int   @id @default(autoincrement())
  shapeId Int   @unique 
  shape   Shape @relation(fields: [shapeId], references: [id], onDelete: Cascade) 
  coords  Json  
}
model Location {
  id        Int      @id @default(autoincrement())
  userId Int
   latitude  Float
  longitude Float
  description      String
  type      String

  user      User     @relation(fields: [userId], references: [id],onDelete: Cascade)

}
model SVG{
  id Int @id @default(autoincrement())
  name String
  icon String
}